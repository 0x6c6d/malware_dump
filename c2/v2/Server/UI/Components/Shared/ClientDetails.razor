@using Persistence.Features.Client.Services
@using Persistence.Features.Command.Services
@rendermode InteractiveServer
@inject IClientService clientService
@inject ICommandService commandService

<div class="modal bg-dark bg-opacity-75" style="display: @(_showModal ? "block" : "none")">
    <div class="d-flex h-100 justify-content-center align-items-center">
        <div class="w-75" style="max-height: 100%">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5">Artikeldetails</h1>
                    <button type="button" @onclick="CloseModal" class="btn-close"></button>
                </div>
                <div class="modal-body">
                    @if (!string.IsNullOrEmpty(_message))
                    {
                        <span class="text-danger">@_message</span>
                    }
                    @if (_client == null)
                    {
                        <p class="text-danger">The client model is empty</p>
                    }
                    else
                    {
                        // Client Details
                        <div class="d-flex flex-row justify-content-between">
                            <div class="d-flex flex-row">
                                <div class="d-flex flex-column me-5">
                                    <div>
                                        <span class="fw-bold d-inline-block" style="width: 50px">Ip:</span>
                                        <span>@_client.Ip</span>
                                    </div>
                                    <div>
                                        <span class="fw-bold d-inline-block" style="width: 50px">Port:</span>
                                        <span>@_client.Port</span>
                                    </div>
                                </div>
                                <div class="d-flex flex-column">
                                    <div>
                                        <span class="fw-bold d-inline-block" style="width: 160px">Last Connection:</span>
                                        <span>@_client.LastConnection</span>
                                    </div>
                                    <div>
                                        <span class="fw-bold d-inline-block" style="width: 160px">First Connection:</span>
                                        <span>@_client.CreatedDateTime</span>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="d-flex flex-row">
                                    @if (!_showDeleteClientBtn)
                                    {
                                        <button class="btn btn-primary" @onclick="() => TriggerDeleteClientButton(true)">Delete Client</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-primary me-4" @onclick="DeleteClient">Confirm</button>
                                        <button class="btn btn-primary" @onclick="() => TriggerDeleteClientButton(false)">Cancel</button>
                                    }
                                </div>
                            </div>
                        </div>

                        // Command History
                        if (_commands == null || _commands.Count == 0)
                        {
                            <p class="text-danger">No commands found for this client</p>
                        }
                        else
                        {
                            <table class="table table-hover mt-5">
                                <thead>
                                <tr>
                                    <th scope="col" style="width: 3%">Nr.</th>
                                    <th scope="col" style="width: 7%; cursor: pointer">Execution Date</th>
                                    <th scope="col" style="width: 37%; cursor: pointer">Command</th>
                                    <th scope="col" style="width: 47%; cursor: pointer">Response</th>
                                    <th scope="col" style="width: 3%;"></th>
                                    <th scope="col" style="width: 3%;"></th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var (index, command) in _commands.Select((item, index) => (index, item)))
                                {
                                    <tr>
                                        <th>@(index + 1)</th>
                                        <td>@command.ExecutionDateTime</td>
                                        <td>@command.Command</td>
                                        <td>@command.Response</td>
                                        @if (!_showDeleteCommandBtn)
                                        {
                                            <th @onclick="() => TriggerDeleteCommandButton(true)">
                                                <img src="icons/trash.svg" alt="Show Commands" style="width: 20px; height: 20px; cursor: pointer"/>
                                            </th>
                                        }
                                        else
                                        {
                                            <th @onclick="() => DeleteCommand(command)">
                                                <img src="icons/check.svg" alt="Show Commands" style="width: 20px; height: 20px; cursor: pointer"/>
                                            </th>
                                            <th @onclick="() => TriggerDeleteCommandButton(false)">
                                                <img src="icons/x.svg" alt="Show Commands" style="width: 20px; height: 20px; cursor: pointer"/>
                                            </th>
                                        }
                                    </tr>
                                }
                                </tbody>
                            </table>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>