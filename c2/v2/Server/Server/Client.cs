using System.Net;
using System.Net.Sockets;

namespace Server;

public class Client(int id)
{
    public int Id = id;
    public readonly Tcp TcpConnection = new(id);
    private const int BufferSize = 4096;

    public class Tcp(int id)
    {
        private TcpClient? _socket;
        private readonly int _id = id;
        private NetworkStream? _networkStream;
        private readonly byte[] _receiveBuffer = new byte[BufferSize];
        
        public void Connect(TcpClient socket)
        {
            _socket = socket;
            socket.ReceiveBufferSize = BufferSize;
            socket.SendBufferSize = BufferSize;

            _networkStream = _socket.GetStream();
            _networkStream.BeginRead(_receiveBuffer, 0, BufferSize, ReceiveCallback, null);
        }

        private void ReceiveCallback(IAsyncResult result)
        {
            try
            {
                if (_networkStream == null)
                {
                    return;
                }
                
                int byteLength = _networkStream.EndRead(result);
                if (byteLength <= 0)
                {
                    // TODO: disconnect client
                    return;
                }

                byte[] data = new byte[byteLength];
                Array.Copy(_receiveBuffer, data, byteLength);
                
                // TODO: handle data
                _networkStream.BeginRead(_receiveBuffer, 0, BufferSize, ReceiveCallback, null);
            }
            catch (Exception e)
            {
                Console.WriteLine($"[e] Error: {e}");
                // TODO: disconnect client
            }
        }
    }
}