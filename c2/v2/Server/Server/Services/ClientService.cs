using System.Collections.Concurrent;
using System.Net.Sockets;
using System.Text;

namespace Server.Services;

public class ClientService : IClientService
{
    public async Task HandleClient(TcpClient client, int clientId, ConcurrentDictionary<int, TcpClient> clients)
    {
        // TODO: read buffer size from config
        var buffer = new byte[4096];
        var stream = client.GetStream();

        try
        {
            var send = "whoami"u8.ToArray();
            await stream.WriteAsync(send);

            while (await (stream.ReadAsync(buffer)) != 0)
            {
                var data = Encoding.UTF8.GetString(buffer);
                Console.WriteLine($"[i] Msg from {client.Client.RemoteEndPoint}: {data}");
            }

            clients.TryRemove(clientId, out _);
            client.Close();
            Console.WriteLine($"[i] Client {clientId} disconnected: {client.Client.RemoteEndPoint}");
        }
        catch (OperationCanceledException)
        {
            Console.WriteLine("[w] HandleClient() was canceled");
        }
        catch (Exception e)
        {
            Console.WriteLine($"[e] Error message: {e}");
        }
    }
}