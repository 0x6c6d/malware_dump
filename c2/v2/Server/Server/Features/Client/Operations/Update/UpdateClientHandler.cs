using Server.Features.Client.Repositories;

namespace Server.Features.Client.Operations.Update;

public class UpdateClientHandler(IClientRepository clientRepository) : IRequestHandler<UpdateClientRequest, Unit>
{
    public async Task<Unit> Handle(UpdateClientRequest request, CancellationToken cancellationToken)
    {
        var client = await clientRepository.GetByIdAsync(request.Id);
        if (client == null)
            throw new NotFoundException(nameof(Client), request.Id);

        var validator = new UpdateClientValidator(clientRepository);
        var validationResult = await validator.ValidateAsync(request, cancellationToken);
        if (validationResult.Errors.Count > 0)
            throw new ValidationException(validationResult.Errors);

        ClientMapper.UpdateClientRequestToClient(request, client);
        client.LastModifiedDateTime = DateTime.UtcNow;
        await clientRepository.UpdateAsync(client);

        return Unit.Value;
    }
}