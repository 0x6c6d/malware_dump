using Persistence.Common.Exceptions;
using Persistence.Features.Command.Repositories;

namespace Persistence.Features.Command.Operations.Delete;

public class DeleteCommandHandler(ICommandRepository commandRepository) : IRequestHandler<DeleteCommandRequest, Unit>
{
    public async Task<Unit> Handle(DeleteCommandRequest request, CancellationToken cancellationToken)
    {
        var client = await commandRepository.GetByIdAsync(request.Id);
        if (client == null)
        {
            throw new NotFoundException(nameof(client), request.Id);
        }

        await commandRepository.DeleteAsync(client);
        return Unit.Value;
    }
}