using Persistence.Features.Command.Models;
using Persistence.Features.Command.Repositories;

namespace Persistence.Features.Command.Operations.Read.One;

public class GetCommandHandler(ICommandRepository commandRepository): IRequestHandler<GetCommandRequest, GetCommandReturn>
{
    public async Task<GetCommandReturn> Handle(GetCommandRequest request, CancellationToken cancellationToken)
    {
        var client = await commandRepository.GetByIdAsync(request.Id);
        if (client == null)
        {
            throw new NotFoundException(nameof(CommandModel), request.Id);
        }

        var getClientReturn = CommandMapper.CommandToGetCommandReturn(client);
        return getClientReturn;
    }
}