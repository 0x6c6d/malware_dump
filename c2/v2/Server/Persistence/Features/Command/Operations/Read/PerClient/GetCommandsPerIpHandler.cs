using Persistence.Features.Command.Models;
using Persistence.Features.Command.Repositories;

namespace Persistence.Features.Command.Operations.Read.PerClient;

public class GetCommandsPerIpHandler(ICommandRepository commandRepository) : IRequestHandler<GetCommandsPerIpRequest, List<GetCommandsByIpReturn>>
{
    public async Task<List<GetCommandsByIpReturn>> Handle(GetCommandsPerIpRequest request, CancellationToken cancellationToken)
    {
        var client = await commandRepository.GetCommandsByIp(request.Ip);
        if (client == null)
        {
            throw new NotFoundException(nameof(CommandModel), request.Ip);
        }

        var getClientReturn = CommandMapper.CommandsToGetCommandsPerIpReturn(client);
        return getClientReturn;
    }
}