using Microsoft.EntityFrameworkCore;
using Persistence.Common.Persistence;
using Persistence.Common.Persistence.Repositories;
using Persistence.Features.Client.Models;

namespace Persistence.Features.Client.Repositories;

public class ClientRepository(DataContext dbContext) : BaseRepository<ClientModel>(dbContext), IClientRepository
{
    private readonly DataContext _dbContext = dbContext;

    public Task<ClientModel?> GetClientByIpAsync(string ip)
    {
        var client = _dbContext.Clients.FirstOrDefaultAsync(x => x.Ip.ToLower() == ip.ToLower());
        return client;
    }
    
    public Task<bool> IsClientIpUnique(string ip)
    {
        var match = _dbContext.Clients.Any(a => a.Ip.ToLower() == ip.ToLower());
        return Task.FromResult(match);
    }
}